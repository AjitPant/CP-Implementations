#include "bits/stdc++.h"
#define int long long
#define endl '\n'
using namespace std;
 
typedef long long ll;
#define db(x) cerr << #x << ": " << x << '\n';
#define read(a) int a; cin >> a;
#define readb(a, b) int a, b; cin >> a >> b;
#define readc(a, b, c) int a, b, c; cin >> a >> b >> c;
#define readarr(a, n) int a[(n) + 1] = {}; FOR(i, 1, (n)) {cin >> a[i];}
#define readmat(a, n, m) int a[n + 1][m + 1] = {}; FOR(i, 1, n) {FOR(j, 1, m) cin >> a[i][j];}
 
#define print(a) cout << a << endl;
#define printarr(a, n) FOR (i, 1, n) cout << a[i] << " "; cout << endl;
#define printv(v) for (int i: v) cout << i << " "; cout << endl;
#define printmat(a, n, m) FOR (i, 1, n) {FOR (j, 1, m) cout << a[i][j] << " "; cout << endl;} cout << endl;
#define all(v) v.begin(), v.end()
#define sz(v) (int)(v.size())
#define rz(v, n) v.resize((n) + 1);
#define pb push_back
#define fi first
#define se second
#define vi vector <int>
#define pi pair <int, int>
#define vpi vector <pi>
#define vvi vector <vi>
#define FOR(i, a, b) for (int i = (a); i <= (b); i++)
#define FORD(i, a, b) for (int i = (a); i >= (b); i--)
const ll inf = 1e18;
const ll mod = 1e9 + 7;
const ll N = 1e5 + 1;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int n, m;
vi adj[N], adjt[N];
int c[N], vis[N];

void input()
{
	cin >> n >> m;
	FOR (i, 1, n) cin >> c[i];
	FOR (i, 1, m)
	{
		readb(x, y);
		x++, y++;
		adj[y].pb(x);
		adjt[x].pb(y);
	}
}

vi topo;
void dfs (int cur)
{
    vis[cur] = true;
	for (int i: adj[cur])
		if (!vis[i])
			dfs(i);
	
	topo.pb(cur);
}

signed main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	input();
	
	FOR (i, 1, n)
	    if (!vis[i])
	        dfs(i);
	
	reverse(all(topo));
	int mx = 0, dp[n + 1] = {};
	
	FOR (x, 0, n - 1)
	{
	    int i = topo[x];
	    if (c[i]) 
	    {
	        dp[i] = 1;
    	    for (int j: adjt[i])
        	    if (!c[j]) dp[i] = max(dp[i], dp[j] + 1);
        	    else dp[i] = max(dp[i], dp[j]);
	    }
	    
	    else
	    {
	        for (int j: adjt[i])
        	    dp[i] = max(dp[i], dp[j]);
	    }
	    
	    mx = max(mx, dp[i]);
	}
	
	print(mx);
}







Â 
