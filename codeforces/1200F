#include "bits/stdc++.h"
//#define int long long
#define endl '\n'
using namespace std;
 
typedef long long ll;
#define db(x) cerr << #x << ": " << x << '\n';
#define read(a) int a; cin >> a;
#define readb(a, b) int a, b; cin >> a >> b;
#define readc(a, b, c) int a, b, c; cin >> a >> b >> c;
#define readarr(a, n) int a[(n) + 1] = {}; FOR(i, 1, (n)) {cin >> a[i];}
#define readmat(a, n, m) int a[n + 1][m + 1] = {}; FOR(i, 1, n) {FOR(j, 1, m) cin >> a[i][j];}

#define print(a) cout << a << endl;
#define printarr(a, n) FOR (i, 1, n) cout << a[i] << " "; cout << endl;
#define printv(v) for (int i: v) cout << i << " "; cout << endl;
#define printmat(a, n, m) FOR (i, 1, n) {FOR (j, 1, m) cout << a[i][j] << " "; cout << endl;} cout << endl;
#define all(v) v.begin(), v.end()
#define sz(v) (int)(v.size())
#define rz(v, n) v.resize((n) + 1);
#define pb push_back
#define fi first
#define se second
#define vi vector <int>
#define pi pair <int, int>
#define vpi vector <pi>
#define vvi vector <vi>
#define FOR(i, a, b) for (int i = (a); i <= (b); i++)
#define FORD(i, a, b) for (int i = (a); i >= (b); i--)
const ll mod = 1e9 + 7;
const ll N = 2e5 + 1;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
int siz[1001], k[1001], adj[1001][10], cyc[1001][2520];
bool vis[1001][2520];
vpi path;

int dfs (int x, int y)
{
    if (cyc[x][y]) return cyc[x][y];
    
    if (vis[x][y])
    {
        set <int> s = {x};
        while (path.back() != pi({x, y}))
        {
            int w = path.back().fi;
            s.insert(w);
            path.pop_back();
        }
        
        return cyc[x][y] = sz(s);
    }
    
    vis[x][y] = 1;
    path.pb({x, y});
    return cyc[x][y] = dfs(adj[x][(y + k[x]) % siz[x]], (y + k[x]) % 2520);
}
 
signed main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	read(n);
	FOR (i, 1, n) cin >> k[i];
	FOR (i, 1, n) k[i] = ((k[i] % 2520) + 2520) % 2520;
	FOR (i, 1, n)
	{
	    cin >> siz[i];
	    FOR (j, 0, siz[i] - 1) cin >> adj[i][j]; 
	}
	
	FOR (i, 1, n)
	    FOR (j, 0, 2519)
	        if (!vis[i][j]) path.clear(), dfs(i, j);
	
	read(q);
	FOR (i, 1, q)
	{
	    readb(x, y);
	    y = ((y % 2520) + 2520) % 2520;
	    print(cyc[x][y]);
	}
}
















Â 
